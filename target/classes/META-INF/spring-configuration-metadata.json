{
  "hints": [],
  "groups": [
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties",
      "name": "spring.message.ons.producer",
      "type": "com.aihuishou.message.properties.ProducerProperties"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties",
      "name": "spring.message.ons.producer.retry",
      "type": "com.aihuishou.message.properties.ProducerProperties$Retry"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ServerProperties",
      "name": "spring.message.ons.server",
      "type": "com.aihuishou.message.properties.ServerProperties"
    }
  ],
  "properties": [
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties",
      "defaultValue": true,
      "name": "spring.message.ons.producer.enable-retry",
      "description": "whether enable additional retry which do not rely on message system",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties",
      "name": "spring.message.ons.producer.producer-group",
      "description": "producer group eg ons pid",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties$Retry",
      "defaultValue": 500,
      "name": "spring.message.ons.producer.retry.back-off-initial-interval",
      "description": "The backoff initial interval on retry. This is a  RetryTemplate configuration which is provided by the framework. Default: 1000 ms. You can also provide custom RetryTemplate in the event you want to take complete control of the RetryTemplate. Simply configure it as @Bean inside your application configuration.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties$Retry",
      "defaultValue": 10000,
      "name": "spring.message.ons.producer.retry.back-off-max-interval",
      "description": "The maximum backoff interval. This is a  RetryTemplate configuration which is provided by the framework. Default: 10000 ms. You can also provide custom RetryTemplate in the event you want to take complete control of the RetryTemplate. Simply configure it as @Bean inside your application configuration.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties$Retry",
      "defaultValue": 2,
      "name": "spring.message.ons.producer.retry.back-off-multiplier",
      "description": "The backoff multiplier.This is a  RetryTemplate configuration which is provided by the framework. Default: 2.0. You can also provide custom RetryTemplate in the event you want to take complete control of the RetryTemplate. Simply configure it as @Bean inside your application configuration.",
      "type": "java.lang.Double"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ProducerProperties$Retry",
      "defaultValue": 3,
      "name": "spring.message.ons.producer.retry.max-attempts",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ServerProperties",
      "name": "spring.message.ons.server.access-key",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ServerProperties",
      "name": "spring.message.ons.server.name-server",
      "description": "name server for ons, formats: `host:port;host:port`",
      "type": "java.lang.String"
    },
    {
      "sourceType": "com.aihuishou.message.properties.ServerProperties",
      "name": "spring.message.ons.server.secret-key",
      "type": "java.lang.String"
    }
  ]
}